// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SentEmailsColumns holds the columns for the "sent_emails" table.
	SentEmailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString},
		{Name: "sent_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// SentEmailsTable holds the schema information for the "sent_emails" table.
	SentEmailsTable = &schema.Table{
		Name:       "sent_emails",
		Columns:    SentEmailsColumns,
		PrimaryKey: []*schema.Column{SentEmailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sent_emails_users_sent_emails",
				Columns:    []*schema.Column{SentEmailsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_blocked", Type: field.TypeBool, Default: false},
		{Name: "sync_code", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_archived", Type: field.TypeBool, Default: false},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "delete_after", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SentEmailsTable,
		UsersTable,
	}
)

func init() {
	SentEmailsTable.ForeignKeys[0].RefTable = UsersTable
}
