name: Build and Push on Tag

on:
  push:
    tags:
      - "v*"

env:
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
  DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}
  VERSION: ${{ github.ref_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - service: auth
            type: ""
          - service: auth
            type: migration

          - service: user
            type: ""
          - service: user
            type: migration

          - service: profile
            type: ""
          - service: profile
            type: migration

          - service: mailer
            type: ""

          - service: token
            type: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          make docker-build \
            SERVICE=${{ matrix.service }} \
            TYPE=${{ matrix.type }} \
            VERSION=${{ env.VERSION }} \
            DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY }} \
            DOCKER_REPOSITORY=${{ env.DOCKER_REPOSITORY }}

      - name: Push Docker Image
        run: |
          make docker-push \
            SERVICE=${{ matrix.service }} \
            TYPE=${{ matrix.type }} \
            VERSION=${{ env.VERSION }} \
            DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY }} \
            DOCKER_REPOSITORY=${{ env.DOCKER_REPOSITORY }}

      - name: Logout from Docker Registry
        run: docker logout ${{ env.DOCKER_REGISTRY }}
        if: always()

      - name: Notify on Success
        if: success()
        run: echo "Docker image for ${{ matrix.service }} successfully built and pushed with version ${{ env.VERSION }}."

      - name: Notify on Failure
        if: failure()
        run: echo "Failed to build or push Docker image for ${{ matrix.service }} with version ${{ env.VERSION }}."
